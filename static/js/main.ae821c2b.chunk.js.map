{"version":3,"sources":["Nav.js","localaxios.js","Request.js","Banner.js","Row.js","HomeScreen.js","features/userSlice.js","firebase.js","SignUp.js","Login.js","App.js","app/store.js","index.js"],"names":["Nav","useState","show","handleShow","transitionNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","className","src","alt","instance","axios","create","baseURL","API_KEY","userrequests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchTopActionMovies","fetchTopComedyMovies","fetchTopHorrorMovies","fetchTopRomanceMovies","fetchTopDocumentaries","Banner","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","title","orignal_name","name","overview","Row","isLargeRow","fetchURL","movies","map","poster_path","id","HomeScreen","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","SignUp","emailRef","useRef","passwordRef","ref","type","placeholder","onClick","e","preventDefault","signInWithEmailAndPassword","current","value","then","userCredential","console","log","catch","error","alert","message","createUserWithEmailAndPassword","Login","signIn","SetSignIn","onSubmit","App","useSelector","dispatch","useDispatch","unsubscribe","onAuthStateChanged","uid","email","store","configureStore","reducer","userReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae821c2b.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport './css/nav.css'\n\n\nconst Nav =()=>{\n\tconst [show, handleShow] = useState(false);\n\tconst transitionNavbar=()=>{\n\t\tif(window.scrollY>100){\n\t\t\thandleShow(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\thandleShow(false);\n\t\t}\n\n\t}\n\n\tuseEffect(()=>{\n\t\twindow.addEventListener('scroll', transitionNavbar)\n\n\t\treturn()=>{\n\t\t\twindow.removeEventListener('scroll', transitionNavbar)\n\t\t}\n\n\t},[])\n\n\n\treturn(\n\t\t<div className={`nav ${show && \"nav__black\"}`}>\n\t\t\t<div className=\"nav__content\">\n\t\t\t\t<img src=\"/images/Netflix_logo.svg.png\" alt=\"Netflix\" className=\"login__logo\"/>\n\t\t\t\t<img src=\"https://pbs.twimg.com/profile_images/1398399796667244549/oZeQQEzC_400x400.png\" className=\"avtar_netflix\" alt=\"\"/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Nav","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL:'https://api.themoviedb.org/3/'\n})\n\nexport default instance","const API_KEY = 'c2f5964090763e040d9509dc0445d7fe';\n\nconst userrequests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchTopActionMovies:`/discover/movie?api_key=${API_KEY}&with_geners=28`,\n  fetchTopComedyMovies:`/discover/movie?api_key=${API_KEY}&with_geners=35`,\n  fetchTopHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_geners=27`,\n  fetchTopRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_geners=10749`,\n  fetchTopDocumentaries:`/discover/movie?api_key=${API_KEY}&with_geners=99`,\n};\n\nexport default userrequests","import axios from './localaxios';\nimport React, {useState, useEffect} from 'react';\nimport './css/banner.css'\nimport userrequests from './Request'\n\nconst Banner =()=>{\n\tconst [movie, setMovie] = useState([])\n\n\tuseEffect(()=>{\n\t\tasync function fetchData() {\n      const request = await axios.get(userrequests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n    }\n    fetchData();\n\t}, []);\n\n\treturn(\n\t\t<div className=\"banner\" style={{backgroundImage:`url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`, backgroundPosition:'center', backgroundSize:'cover'}}>\n\t\t\t<div className=\"banner__content\">\n\t\t\t\t<h1 className=\"banner__title\">\n\t\t\t\t{movie ?.title || movie?.orignal_name || movie?.name}\n\t\t\t\t</h1>\n\n\t\t\t\t<div className=\"banner__buttons\">\n\t\t\t\t\t<button>Play</button>\n\t\t\t\t\t<button>My List</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"banner__description\">\n\t\t\t\t{movie ?.overview}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"banner__fade\"></div>\n\t\t</div>\n\t)\n}\n\nexport default Banner","import axios from './localaxios'\nimport React,{useState, useEffect} from 'react';\nimport \"./css/row.css\"\n\nconst Row =({title, isLargeRow, fetchURL})=>{\n\tconst [movies, setMovie] = useState([]);\n\n\tconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\tuseEffect(()=>{\n\t\tasync function fetchData(){\n\n\t\t\tconst request = await axios.get(fetchURL);\n\t\t\tsetMovie(request.data.results);\n\t\t\treturn request\n\t\t}\n\t\tfetchData();\n\t},[fetchURL])\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<h2>{title}</h2>\n\t\t\t<div className=\"row__posters\">\n\t\t\t{\n\t\t\t\tmovies.map(movie=>{\n\t\t\t\t\treturn <img src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt=\"\" \n\t\t\t\tclassName={`rowposter ${isLargeRow && \"largeImage\"}`} key={movie.id}/>\n\t\t\t\t})\n\t\t\t}\n\t\t\t\t\n\t\t\t</div>\n\n\t\t</div>\n\t\t)\n}\n\nexport default Row","import React from 'react';\nimport Nav from './Nav';\nimport Banner from './Banner';\nimport Row from './Row';\nimport userrequests from './Request'\nimport './css/homescreen.css'\n\nconst HomeScreen =()=>{\n\treturn(\n\t\t<div className=\"homescreen\">\n\t\t\t<Nav/>\n\t\t\t<Banner/>\n\t\t\t<Row title=\"Netflix Originals\" isLargeRow fetchURL={userrequests.fetchNetflixOriginals}/>\n\t\t\t<Row title=\"Treding Now\" fetchURL={userrequests.fetchTrending}/>\n\t\t\t<Row title=\"Top Rated\" fetchURL={userrequests.fetchTopRated}/>\n\t\t\t<Row title=\"Action Movies\" fetchURL={userrequests.fetchTopActionMovies}/>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default HomeScreen","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n\tname:'user',\n\tinitialState:{\n\t\tuser:null\n\t},\n\n\treducers:{\n\t  login:(state, action) =>{\n\t  \tstate.user = action.payload;\n\t  },\n\t  logout:(state)=>{\n\t  \tstate.user = null;\n\t  },\n\n\n\t},\n\n});\n\nexport const { login, logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { initializeApp } from 'firebase/app';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAMxUw1rHuJOtXXdx_ttdceM45e_dkbIXw\",\n  authDomain: \"netflix-clone-bc88c.firebaseapp.com\",\n  projectId: \"netflix-clone-bc88c\",\n  storageBucket: \"netflix-clone-bc88c.appspot.com\",\n  messagingSenderId: \"103044660991\",\n  appId: \"1:103044660991:web:1b2f5c87951b2375c3d6ca\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst auth =  getAuth();\n\nexport {auth} ","import React, {useRef} from 'react';\nimport './css/login.css';\nimport {auth} from './firebase';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\n\n\nconst SignUp =()=>{\n\tconst emailRef = useRef(null);\n\tconst passwordRef = useRef(null);\n\tconst register =(e)=>{\n\t\te.preventDefault();\n\t\tcreateUserWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value).then( userCredential => {\n    \t  console.log(userCredential);\n \t\t }).catch( error => {\n\t      alert(error.message);\n\t  });\n\t}\n\n\tconst signIn =(e)=>{\n\t\te.preventDefault();\n\t\tsignInWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value).then( userCredential => {\n    \t  console.log(userCredential);\n \t\t }).catch( error => {\n\t      alert(error.message);\n\t  });\n\t}\n\treturn(\n\t\t<div className=\"signUpScreen\">\n\t\t\t<form>\n\t\t\t\t<h1>Sign In</h1>\n\t\t\t\t<input ref={emailRef} type=\"email\" placeholder=\"Email\"/>\n\t\t\t\t<input ref={passwordRef} type=\"password\" placeholder=\"Password\"/>\n\t\t\t\t<button onClick={signIn}>Sign In</button>\n\n\t\t\t\t<h4>New to Netflix <span onClick={register}>Sign Up Now.</span></h4>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default SignUp","import React,{useState} from 'react';\nimport SignUp from './SignUp';\nimport './css/login.css';\n\nconst Login =()=>{\n\tconst[signIn, SetSignIn] = useState(false);\n\tconst showSignIn =(e)=>{\n\t\te.preventDefault();\n\t\tSetSignIn(true)\n\t}\n\n\treturn(\n\t\t<div className=\"login\">\n\t\t\t<div className=\"login__header\">\n\t\t\t\t<img src=\"/images/Netflix_logo.svg.png\" alt=\"Netflix\" className=\"login__logo\"/>\n\n\t\t\t\t<button className=\"login__button\">\n\t\t\t\t\tSign In\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"login__body\">\n\t\t\t{signIn ? <SignUp/> : <><h1>Unlimited movies, TV shows and more.</h1>\n\t\t\t\t<h2>Watch anywhere. Cancel anytime.</h2>\n\t\t\t\t<h3>Ready to watch? Enter your email to create or restart your membership.</h3>\n\t\t\t\t\n\t\t\t\t<form className=\"login__form\" onSubmit={showSignIn}>\n\t\t\t\t\t<input type=\"text\" placeholder=\"Email Address\"/>\n\t\t\t\t\t<button>Get Started</button>\n\t\t\t\t</form></>}\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div className=\"login__gradient\"></div>\n\t\t</div>\n\t)\n}\n\nexport default Login","import React,{useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport HomeScreen from './HomeScreen';\nimport {login, logout, selectUser} from './features/userSlice';\nimport { getAuth, onAuthStateChanged} from \"firebase/auth\";\nimport Login from './Login';\n\n\nimport './App.css';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    const auth = getAuth();\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n       if (user) {\n          dispatch(login({\n            uid:user.uid,\n            email:user.email\n          }))\n       } else {\n          dispatch(logout);\n       }\n      });\n    return unsubscribe;\n  },[])\n\n  return (\n    <div className=\"App\">\n    {!user ? (<Login/>) : (<HomeScreen/>)}\n    </div>\n  )\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from '../features/userSlice';\nimport { getAuth } from \"firebase/auth\";\n\n\nexport const store = configureStore({\n  reducer: {\n  \tuser:userReducer,\n  },\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}